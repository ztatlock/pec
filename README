Bouncer : Only let the good optimizations through.

INTRO

  This software implements the checking algorithm from 'Proving
  Optimizations Correct using Parameterized Program Equivalence' by Kundu,
  Tatlock, and Lerner in PLDI 2009. Bouncer attempts to automatically prove
  that a given optimization always preserves program behavior.

  Optimizations are expressend as parameterized rewrite rules. See the
  paper mentioned above and the examples under test/ for more info.

BUILDING

  Bouncer depends on the OCaml language and supporting tools.

  To build simply:

    $ make

RUNNING

  To check an optmization in 'foo.rwr' run:

    $ ./bin/bouncer -input foo.rwr

  For more options see:

    $ ./bin/bouncer -help

  To run the regression tests:

    $ ./script/test-parser.sh
    $ ./script/test-relate.sh

NOTES

  The tools in script/ depend on the environment variable BOUNCER which
  must be set to the toplevel directory of the project, e.g.

    $ export BOUNCER=/home/ztatlock/proj/bouncer

  To avoid forgetting this incantation, tuck it into your ~/.bashrc

